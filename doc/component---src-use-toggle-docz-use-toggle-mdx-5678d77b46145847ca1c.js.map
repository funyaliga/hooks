{"version":3,"sources":["webpack:///../src/useToggle/__docz__/useToggle.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useToggle","state1","toggle1","state2","toggle2","onClick","isMDXComponent"],"mappings":"6gBAQO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,6BACA,uBACA,iBAAQ,CACN,GAAM,OADR,OAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,sNAYL,uBACA,iBAAQ,CACN,GAAM,QADR,QAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,6xBAAsyBC,SAAO,GAC90BL,QACAH,kBACAS,eACAC,eAJ80B,gBAK90BV,IAL80B,EAM90BH,eAN80B,GAO70BO,QAAQ,eACZ,WAAM,MACyBM,cAAnBC,EADN,KACcC,EADd,OAEyBF,YAAU,MAAO,MAApCG,EAFN,KAEcC,EAFd,KAGD,OAAO,sBACP,sBACE,uBACE,4BACA,iCAAaH,GACb,uBACE,sBAAQI,QAASH,GAAjB,UACA,sBAAQG,QAAS,kBAAMH,GAAQ,KAA/B,YACA,sBAAQG,QAAS,kBAAMH,GAAQ,KAA/B,gBAIN,sBACE,gCACA,iCAAaC,GACb,uBACE,sBAAQE,QAASD,GAAjB,UACA,sBAAQC,QAAS,kBAAMD,EAAQ,QAA/B,UACA,sBAAQC,QAAS,kBAAMD,EAAQ,SAA/B,uB,oNAUZb,EAAWe,gBAAiB","file":"component---src-use-toggle-docz-use-toggle-mdx-5678d77b46145847ca1c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/junli/work/fun/hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useToggle } from \"../../index\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usetoggle\"\n    }}>{`useToggle`}</h1>\n    <p>{`状态切换`}</p>\n    <hr />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`type IState = string | number | boolean | undefined;\n\nconst [\n  offValue: IState = false,\n  onValue: IState = true,\n] = useImage(\n  state: IState, // 当前状态\n  toggle: (nextValue?: any) => void // 切换\n);\n`}</code></pre>\n    <hr />\n    <h2 {...{\n      \"id\": \"demo\"\n    }}>{`DEMO`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [state1, toggle1] = useToggle()\\n  const [state2, toggle2] = useToggle(\\'off\\', \\'on\\')\\n  return (\\n    <ul>\\n      <li>\\n        <div>\\n          <h4>默认</h4>\\n          <div>状态: {`${state1}`}</div>\\n          <div>\\n            <button onClick={toggle1}>toggle</button>\\n            <button onClick={() => toggle1(true)}>set true</button>\\n            <button onClick={() => toggle1(false)}>set false</button>\\n          </div>\\n        </div>\\n      </li>\\n      <li>\\n        <h4>on/off</h4>\\n        <div>状态: {`${state2}`}</div>\\n        <div>\\n          <button onClick={toggle2}>toggle</button>\\n          <button onClick={() => toggle2(\\'on\\')}>set on</button>\\n          <button onClick={() => toggle2(\\'off\\')}>set off</button>\\n        </div>\\n      </li>\\n    </ul>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useToggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [state1, toggle1] = useToggle();\n        const [state2, toggle2] = useToggle('off', 'on');\n        return <ul>\n        <li>\n          <div>\n            <h4>默认</h4>\n            <div>状态: {`${state1}`}</div>\n            <div>\n              <button onClick={toggle1}>toggle</button>\n              <button onClick={() => toggle1(true)}>set true</button>\n              <button onClick={() => toggle1(false)}>set false</button>\n            </div>\n          </div>\n        </li>\n        <li>\n          <h4>on/off</h4>\n          <div>状态: {`${state2}`}</div>\n          <div>\n            <button onClick={toggle2}>toggle</button>\n            <button onClick={() => toggle2('on')}>set on</button>\n            <button onClick={() => toggle2('off')}>set off</button>\n          </div>\n        </li>\n      </ul>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}